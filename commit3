/*
DESCRIPTION: Functions for sorting by ID and Grade
*/

void sortByID(Student students[], int count);
void sortByGrade(Student students[], int count);

int main() {
    Student students[MAX_RECORDS];
    int count = 0;
    char inputFile[] = "C:\\Users\\ekoln\\OneDrive\\Desktop\\assignment6.txt";

    // Read data from file
    readFile(students, &count, inputFile);
    printf("Data successfully read from %s\n", inputFile);

    // Sort by ID and display
    sortByID(students, count);
    printf("Records sorted by ID:\n");
    for (int i = 0; i < count; i++) {
        printf("%d, %s, %.2f\n", students[i].id, students[i].name, students[i].grade);
    }

    // Sort by Grade and display
    sortByGrade(students, count);
    printf("Records sorted by Grade:\n");
    for (int i = 0; i < count; i++) {
        printf("%d, %s, %.2f\n", students[i].id, students[i].name, students[i].grade);
    }

    return 0;
}

void sortByID(Student students[], int count) {
    for (int i = 0; i < count - 1; i++) {
        for (int j = 0; j < count - i - 1; j++) {
            if (students[j].id > students[j + 1].id) {
                Student temp = students[j];
                students[j] = students[j + 1];
                students[j + 1] = temp;
            }
        }
    }
}

void sortByGrade(Student students[], int count) {
    for (int i = 0; i < count - 1; i++) {
        for (int j = 0; j < count - i - 1; j++) {
            if (students[j].grade < students[j + 1].grade) {
                Student temp = students[j];
                students[j] = students[j + 1];
                students[j + 1] = temp;
            }
        }
    }
}
